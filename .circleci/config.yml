version: 2.1
executors:
  docker-executor:
    docker:
      - image: outpostuniverse/nas2d-circleci:1.1
  macos-executor:
    macos:
      xcode: "11.3.0"
commands:
  brew-install:
    description: "Brew install MacOS dependencies (or restore from cache)"
    steps:
      - restore_cache:
          name: Restoring brew dependencies
          key: deps-v3-NAS2D-{{ arch }}
      - run: HOMEBREW_NO_AUTO_UPDATE=1 brew install cmake physfs sdl2 sdl2_image sdl2_mixer sdl2_ttf glew
      - save_cache:
          name: Caching brew dependencies
          key: deps-v3-NAS2D-{{ arch }}
          paths:
            - /usr/local/Cellar
      - run: brew link physfs sdl2 sdl2_image sdl2_mixer sdl2_ttf glew
  build-googletest:
    description: "Install Google Test from source package"
    parameters:
      buildPrefix:
        type: string
        default: ~/googletest/
      installPrefix:
        type: string
        default: /usr/local/
    steps:
      - restore_cache:
          name: Restoring Google Test
          key: v2-gtest-{{ arch }}
      - run:
          name: "Download and build Google Test"
          command: |
            set -x
            if [[ ! -d << parameters.buildPrefix >> ]]; then
              pushd /tmp
              curl --silent --location https://github.com/google/googletest/archive/release-1.8.1.tar.gz | tar xz -
              cd googletest-release-1.8.1/
              cmake -DCMAKE_CXX_FLAGS="-std=c++17"
              make
              mkdir -p << parameters.buildPrefix >>
              cp -r googletest/include << parameters.buildPrefix >>
              cp -r googlemock/include << parameters.buildPrefix >>
              mkdir -p << parameters.buildPrefix >>lib/
              find . -name 'lib*.a' -exec cp {} << parameters.buildPrefix >>lib/ \;
              popd
            fi
      - save_cache:
          name: Caching Google Test
          key: v2-gtest-{{ arch }}
          paths:
            - << parameters.buildPrefix >>
      - run:
          name: "Install Google Test system wide"
          command: cp -r << parameters.buildPrefix >> << parameters.installPrefix >>
  build-and-test:
    steps:
      - run: make --keep-going
      - run: make --keep-going test
      - run: make --keep-going check
jobs:
  build-linux:
    executor: docker-executor
    steps:
      - checkout
      - build-and-test
  build-macos:
    executor: macos-executor
    steps:
      - brew-install
      - build-googletest
      - checkout
      - build-and-test
workflows:
  build_and_test:
    jobs:
      - build-linux
      - build-macos
